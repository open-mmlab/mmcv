name: build

on: [push, pull_request]

env:
  MMCV_WITH_OPS: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install pre-commit hook
        run: |
          pip install pre-commit
          pre-commit install
      - name: Linting
        run: pre-commit run --all-files
      - name: Format c/cuda codes with clang-format
        uses: DoozyX/clang-format-lint-action@v0.11
        with:
          source: mmcv/ops/csrc
          extensions: h,c,cpp,hpp,cu,cuh
          style: google

  build_parrots:
    runs-on: ubuntu-latest
#     container:
#       # image: ghcr.io/<YOUR_USERNAME>/<IMAGE_NAME>:<IMAGE_TAG>
#       image: registry.sensetime.com/parrots/parrots-mmcv:1.2
#       credentials:
#         username: wangshiguang
#         password: Uestc0612@5

    steps:
      - uses: actions/checkout@v2
      - name: example.com docker registry login
        run: echo "Uestc0612@5" | docker login registry.sensetime.com -u wangshiguang --password-stdin        
      # - name: Install system dependencies
      #   run: sudo apt-get update && sudo apt-get install -y ffmpeg libturbojpeg
      - name: Install unittest dependencies
        run: pip install -r requirements/test.txt
      - name: Build and install
        run: rm -rf .eggs && pip install -e .
